class LinuxTweakTray:
    def __init__(self):
        self.app = QApplication(sys.argv)

        # Load my app icon into tray
        self.tray = QSystemTrayIcon(QIcon(app_icon))
        self.tray.setToolTip("Flatpak Service Monitor")

        # Check if my icon is loaded correctly in taskbar
        if self.tray.icon().isNull():
            print("Error: Icon is invalid!")
        else:
            print("App icon loaded successfully.")

        self.menu = QMenu()

        # Actions
        self.show_app_action = QAction("Open Service Monitor")
        self.show_app_action.triggered.connect(self.open_app)

        self.refresh_action = QAction("Refresh")
        self.refresh_action.triggered.connect(self.update_status)

        self.exit_action = QAction("Exit")
        self.exit_action.triggered.connect(self.app.quit)

        self.menu.addAction(self.show_app_action)
        self.menu.addAction(self.refresh_action)
        self.menu.addSeparator()
        self.menu.addAction(self.exit_action)

        self.tray.setContextMenu(self.menu)
        self.tray.activated.connect(self.tray_clicked)

        # Main window
        self.window = LinuxTweakMonitor(self)

        # Check & update status every 5 seconds
        self.update_status()
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_status)
        self.timer.start(5000)  # == 5 seconds

        self.tray.show()
        print("Tray shown.")

    def update_status(self):
        """Update my tray icon and group services by status"""
        service_statuses = [
            (service, *check_service_status(service)) for service in services
        ]

        # Group by status
        active_services = [
            f"{icon}{status} : {service}"
            for service, icon, status in service_statuses
            if "Active" in status
        ]
        disabled_services = [
            f"{icon}{status} : {service}"
            for service, icon, status in service_statuses
            if "Disabled" in status
        ]
        inactive_services = [
            f"{icon}{status} : {service}"
            for service, icon, status in service_statuses
            if "Inactive" in status or "Error" in status
        ]

        # build tooltip text groups
        tooltip_text = ""

        if active_services:
            tooltip_text += "Active services:\n" + "\n".join(active_services) + "\n\n"
        if disabled_services:
            tooltip_text += "Disabled services:\n" + "\n".join(disabled_services) + "\n\n"
        if inactive_services:
            tooltip_text += "Inactive services:\n" + "\n".join(inactive_services) + "\n\n"

        # if no inactive or disabled services, show "All Good"
        if not disabled_services and not inactive_services:
            tooltip_text = "✔️ All Good"

        # keep icon locked to my LinuxTweaks icon
        self.tray.setToolTip(tooltip_text.strip())

        # Always show my LT icon
        self.tray.setIcon(QIcon(app_icon))

    def tray_clicked(self, reason):
        """Handle clicks on tray icon"""
        if reason == QSystemTrayIcon.ActivationReason.Trigger:
            self.open_app()

    def open_app(self):
        """Show the service monitor window"""
        self.window.refresh_status()
        self.window.show()

    def run(self):
        self.app.exec()
